name: Build Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      install-dependencies: ${{ steps.install-dependencies.outputs.result }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.7.1
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        id: install-dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  send-pull-request-result-to-slack:
    permissions:
      contents: read
      actions: read
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,message,author,ref,pullRequest
          custom_payload: |
            {
                  attachments: [{
                          color: '${{ needs.build.result}}' === 'success' ? 'good' : '${{ needs.build.result}}' === 'failure' ? 'danger' : 'warning',
                          title: 'Pull Request Result',
                          text: '${{ needs.build.result}}' === 'success' ? 'Succeeded' : 'Failed',
                          fields: [
                              {
                                  title: 'Result',
                                  value: '${{ needs.build.result }}'
                              },
                              {
                                  title: 'Install Dependencies',
                                  value: '${{ needs.build.outputs.install-dependencies }}',
                                  short: false
                              }
                          ]
                  }]
              }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        # Pick up events even if the job fails or is canceled.
        if: always()
