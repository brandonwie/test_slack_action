name: Build Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.coverage.outputs.report }}
    permissions:
      checks: write
      pull-requests: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use coverage code
        uses: ArtiomTr/jest-coverage-report-action@v2
        id: coverage
        with:
          output: comment, report-markdown
      - name: Add coverage comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: ${{ steps.coverage.outputs.report }}

  send-pull-request-result-to-slack:
    permissions:
      contents: read
      actions: read
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,message,author,ref,pullRequest
          custom_payload: |
            {
                  attachments: [{
                          color: '${{ needs.test.result}}' === 'success' ? 'good' : '${{ needs.test.result}}' === 'failure' ? 'danger' : 'warning',
                          title: 'Pull Request Result',
                          text: '${{ needs.test.result}}' === 'success' ? 'Succeeded' : 'Failed',
                          fields: [
                              {
                                  title: 'Result',
                                  value: '${{ needs.test.result }}'
                              },
                              {
                                  title: 'Coverage',
                                  value: '${{ needs.test.outputs.coverage }}'.toString(),
                                  short: false
                              }
                          ]
                  }]
              }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        # Pick up events even if the job fails or is canceled.
        if: always()
