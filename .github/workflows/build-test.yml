name: Build Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.extract_coverage.outputs.coverage_summary }}
      result: ${{ job.status }}
    permissions:
      checks: write
      pull-requests: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Jest Coverage Report
        id: coverage
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          output: report-markdown

      - name: Extract Coverage Summary
        id: extract_coverage
        run: |
          # Use a simpler extraction method focusing just on percentages
          REPORT='${{ steps.coverage.outputs.report }}'

          # Extract percentages using simpler approach
          STATEMENTS=$(echo "$REPORT" | grep -o "Statements | [0-9]*%" | grep -o "[0-9]*")
          BRANCHES=$(echo "$REPORT" | grep -o "Branches | [0-9]*%" | grep -o "[0-9]*")
          FUNCTIONS=$(echo "$REPORT" | grep -o "Functions | [0-9]*%" | grep -o "[0-9]*")
          LINES=$(echo "$REPORT" | grep -o "Lines | [0-9]*%" | grep -o "[0-9]*")

          # Format summary
          SUMMARY="ðŸ“Š Coverage: Statements: ${STATEMENTS}%, Branches: ${BRANCHES}%, Functions: ${FUNCTIONS}%, Lines: ${LINES}%"

          echo "coverage_summary=$SUMMARY" >> $GITHUB_OUTPUT

  slack:
    permissions:
      contents: read
      actions: read
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,message,author,ref,pullRequest
          custom_payload: |
            {
              attachments: [{
                color: '${{needs.test.result}}' === 'success' ? 'good' : '${{needs.test.result}}' === 'failure' ? 'danger' : 'warning',
                title: 'Pull Request Result',
                text: '${{needs.test.result}}' === 'success' ? 'Test Coverage Report' : 'Tests Failed',
                fields: [
                  {
                    title: 'Result',
                    value: '${{needs.test.result}}'
                  },
                  {
                    title: 'Coverage Summary',
                    value: '${{needs.test.outputs.coverage}}',
                    short: false
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
